"""
Autogenerated input type of CreateOrganization
"""
input CreateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  userCreatorId: ID!
}

"""
Autogenerated return type of CreateOrganization
"""
type CreateOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  organization: Organization
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Membership {
  createdAt: ISO8601DateTime!
  id: ID!
  organization: Organization!
  updatedAt: ISO8601DateTime!
  userFrom: User!
  userTo: User!
}

type Mutation {
  """
  Create a new organization.
  """
  createOrganization(input: CreateOrganizationInput!): CreateOrganizationPayload

  """
  Create a new user.
  """
  createUser(input: CreateUserInput!): CreateUserPayload
}

type Organization {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  photoUrl: String
  updatedAt: ISO8601DateTime!
  userCreatorId: Int!
}

type Profile {
  createdAt: ISO8601DateTime!
  firstName: String!
  id: ID!
  lastName: String
  photoUrl: String
  updatedAt: ISO8601DateTime!
  userId: Int!
}

type Project {
  createdAt: ISO8601DateTime!
  id: ID!
  isPrivate: Boolean!
  name: String!
  ownerId: Int!
  ownerType: ProjectOwner!
  photoUrl: String
  updatedAt: ISO8601DateTime!
  userCreatorId: Int!
}

enum ProjectOwner {
  """
  A user account owns the project.
  """
  ACCOUNT

  """
  An organization owns the project.
  """
  ORGANIZATION
}

type Query {
  organization(id: ID!): Organization
  user(id: ID!): User
  users: [User!]!
}

type User {
  createdAt: ISO8601DateTime!
  id: ID!
  memberships: [Membership!]!
  profile: Profile!
  projects: [Project!]!
  updatedAt: ISO8601DateTime!
}